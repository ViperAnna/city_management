-- CREATE DATABASE city_management;
-- CREATE SCHEMA public;
--
-- -- DROP CASCADE
-- DROP TABLE IF EXISTS public.persons;
-- DROP TABLE IF EXISTS public.passports;
-- DROP TABLE IF EXISTS public.owner_house;
-- DROP TABLE IF EXISTS public.houses;
-- DROP TABLE IF EXISTS public.cars;
--
--
--
-- -- Table: public.passports
-- CREATE TABLE IF NOT EXISTS public.passports
-- (
--     id SERIAL PRIMARY KEY ,
--     number_of_passport SERIAL NOT NULL UNIQUE
--
-- );
-- --     TABLESPACE pg_default;
--
-- -- ALTER TABLE IF EXISTS public.passports
-- --     OWNER to postgres;
--
--
-- -- Table: public.persons
-- CREATE TABLE IF NOT EXISTS public.persons
-- (
--     id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
--     passport_id bigint NOT NULL,
--     gender character varying(255) COLLATE pg_catalog."default",
--     name character varying(255) COLLATE pg_catalog."default",
--     surname character varying(255) COLLATE pg_catalog."default",
--     CONSTRAINT persons_pkey PRIMARY KEY (id),
--     CONSTRAINT persons_passport_id_key UNIQUE (passport_id),
--     CONSTRAINT fke242v0bpl5tob2hbr6usqnkoj FOREIGN KEY (passport_id)
--         REFERENCES public.passports (id) MATCH SIMPLE
--         ON UPDATE NO ACTION
--         ON DELETE NO ACTION,
--     CONSTRAINT persons_gender_check CHECK (gender::text = ANY (ARRAY['MALE'::character varying, 'FEMALE'::character varying]::text[]))
-- )
--
--     TABLESPACE pg_default;
--
-- ALTER TABLE IF EXISTS public.persons
--     OWNER to postgres;
--
--
--
--
-- -- Table: public.houses
--
--
--
-- CREATE TABLE IF NOT EXISTS public.houses
-- (
--     id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
--     number_of_house bigint,
--     zip_code bigint NOT NULL,
--     street character varying(255) COLLATE pg_catalog."default" NOT NULL,
--     CONSTRAINT houses_pkey PRIMARY KEY (id)
-- )
--
--     TABLESPACE pg_default;
--
-- ALTER TABLE IF EXISTS public.houses
--     OWNER to postgres;
--
--
-- -- Table: public.owner_house
--
--
--
-- CREATE TABLE IF NOT EXISTS public.owner_house
-- (
--     house_id bigint NOT NULL,
--     owner_id bigint NOT NULL,
--     person_id bigint NOT NULL,
--     CONSTRAINT owner_house_pkey PRIMARY KEY (owner_id, person_id),
--     CONSTRAINT fk6s9c9nhv5x0cy1qn7tbftugj6 FOREIGN KEY (owner_id)
--         REFERENCES public.houses (id) MATCH SIMPLE
--         ON UPDATE NO ACTION
--         ON DELETE NO ACTION,
--     CONSTRAINT fk7byyia0yfufgfxut1f45hhy7k FOREIGN KEY (house_id)
--         REFERENCES public.houses (id) MATCH SIMPLE
--         ON UPDATE NO ACTION
--         ON DELETE NO ACTION,
--     CONSTRAINT fkspx2a3gm97vmptsaxc8etvmyu FOREIGN KEY (person_id)
--         REFERENCES public.persons (id) MATCH SIMPLE
--         ON UPDATE NO ACTION
--         ON DELETE NO ACTION
-- )
--
--     TABLESPACE pg_default;
--
-- ALTER TABLE IF EXISTS public.owner_house
--     OWNER to postgres;
--
--
--
--
-- -- Table: public.cars
--
--
--
-- CREATE TABLE IF NOT EXISTS public.cars
-- (
--     id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
--     owner_id bigint NOT NULL,
--     model character varying(255) COLLATE pg_catalog."default",
--     CONSTRAINT cars_pkey PRIMARY KEY (id),
--     CONSTRAINT fk82ccqb3p17md157c33e2qerq9 FOREIGN KEY (owner_id)
--         REFERENCES public.persons (id) MATCH SIMPLE
--         ON UPDATE NO ACTION
--         ON DELETE NO ACTION
-- )
--
--     TABLESPACE pg_default;
--
-- ALTER TABLE IF EXISTS public.cars
--     OWNER to postgres;
--
--
-- --Population DB
--
-- INSERT INTO public.persons(
--     id, passport_id, gender, name, surname)
-- VALUES (
--         (1, 4, 'male', 'Ivan', 'Ivanov'),
--         (2, 3, 'female', 'Olga', 'Pavlova'),
--         (3, 2, 'female', 'Maria', 'Smirnova'),
--         (4, 1, 'male', 'Petr', 'Petrov')
--        );
--
--
-- INSERT INTO public.passports(
--      number_of_passport)
-- VALUES (
--         (34526),
--         ( 63683)
-- --         (3, 97584),
-- --         (4, 86204)
--        );
--
-- INSERT INTO public.houses(
--     id, number_of_house, zip_code, street)
-- VALUES (
--         (1, 27, 8902, 'Mochovaya'),
--         (2, 3, 8653, 'Vosstaniya'),
--         (3, 16, 7645, 'Pushkinskaya'),
--         (4, 41, 3452, 'Sennaya')
--        );
--
--
-- INSERT INTO public.owner_house(
--     house_id, owner_id, person_id)
-- VALUES (?, ?, ?);
--
--
--
-- INSERT INTO public.cars(
--     id, owner_id, model)
-- VALUES (
--            (1, 3, 'Ferra'),
--            (2, 4, 'Ford'),
--            (3, 1, 'Mitsa')
-- --            (4, 2, 'Lada')
--        );
--
